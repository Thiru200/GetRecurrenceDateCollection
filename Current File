ALTER PROCEDURE [dbo].[GetOccurrenceDates]
@RRule				Varchar(250),
@SDate				DateTime,
@OccurrenceCount	Int=100
AS
BEGIN
	BEGIN TRY
	/* 
	    ===============================
		DAILY Pattern Sample - START
		1)EXEC GetOccurrenceDates @RRule='FREQ=DAILY;COUNT=10',@SDate='2023-10-11',@OccurrenceCount=15 
		2)EXEC GetOccurrenceDates @RRule='FREQ=DAILY;UNTIL=20231224T000000Z',@SDate='2023-10-11',@OccurrenceCount=15 
		3)EXEC GetOccurrenceDates @RRule='FREQ=DAILY;INTERVAL=2',@SDate='2023-10-11',@OccurrenceCount=15 
		4)EXEC GetOccurrenceDates @RRule='FREQ=DAILY;INTERVAL=10;COUNT=5',@SDate='2023-10-11',@OccurrenceCount=15 		
	
		DAILY Pattern Sample - END
	    ===============================
		WEEKLY Pattern Sample - START
		1)EXEC GetOccurrenceDates @RRule='FREQ=WEEKLY;COUNT=20',@SDate='2023-10-11',@OccurrenceCount=15 
		2)EXEC GetOccurrenceDates @RRule='FREQ=WEEKLY;BYDAY=MO,TU,WE;UNTIL=20231111T182959Z',@SDate='2023-10-11',@OccurrenceCount=15 		
		3)EXEC GetOccurrenceDates @RRule='FREQ=WEEKLY;UNTIL=20231224T000000Z',@SDate='2023-10-11',@OccurrenceCount=15 
		4)EXEC GetOccurrenceDates @RRule='FREQ=WEEKLY;UNTIL=20231207T000000Z;WKST=SU;BYDAY=TU,TH',@SDate='2023-10-11',@OccurrenceCount=15 
		5)EXEC GetOccurrenceDates @RRule='FREQ=WEEKLY;COUNT=10;WKST=SU;BYDAY=TU,TH',@SDate='2023-10-11',@OccurrenceCount=15 
		6)EXEC GetOccurrenceDates @RRule='FREQ=WEEKLY;INTERVAL=2;WKST=SU;BYDAY=MO,WE,FR',@SDate='2023-10-11',@OccurrenceCount=15 
		WEEKLY Pattern Sample - END
		===============================


		===============================
		MONTHLY Pattern Sample - START
		1)EXEC GetOccurrenceDates @RRule='FREQ=MONTHLY;INTERVAL=2;BYMONTH=1',@SDate='2023-10-11',@OccurrenceCount=15 
		2)EXEC GetOccurrenceDates @RRule='FREQ=MONTHLY;INTERVAL=2;BYDAY=MO',@SDate='2023-10-11',@OccurrenceCount=15 		
		3)EXEC GetOccurrenceDates @RRule='FREQ=MONTHLY;BYDAY=MO;UNTIL=20231224T000000Z',@SDate='2023-10-11',@OccurrenceCount=15 
		4)EXEC GetOccurrenceDates @RRule='FREQ=WEEKLY;UNTIL=20231207T000000Z;WKST=SU;BYDAY=TU,TH',@SDate='2023-10-11',@OccurrenceCount=15 
		5)EXEC GetOccurrenceDates @RRule='FREQ=WEEKLY;COUNT=10;WKST=SU;BYDAY=TU,TH',@SDate='2023-10-11',@OccurrenceCount=15 
		6)EXEC GetOccurrenceDates @RRule='FREQ=WEEKLY;INTERVAL=2;WKST=SU;BYDAY=MO,WE,FR',@SDate='2023-10-11',@OccurrenceCount=15 
		MONTHLY Pattern Sample - END
		===============================
    
	*/
		IF OBJECT_ID('RecurrenceDateCollection', 'U') IS NOT NULL TRUNCATE TABLE RecurrenceDateCollection
		IF OBJECT_ID('RecurrenceRuleSeparator', 'U') IS NOT NULL TRUNCATE TABLE RecurrenceRuleSeparator
		IF OBJECT_ID('RecurrenceRuleWeeklySeparator', 'U') IS NOT NULL TRUNCATE TABLE RecurrenceRuleWeeklySeparator

		DECLARE @RecurrenceRuleSeparator AS RecurrenceRuleSeparator
		DECLARE @RecurrenceRuleWeeklySeparator AS RecurrenceRuleWeeklySeparator

		DECLARE @StartDate DateTime=@SDate
		DECLARE @RuleArray VARCHAR(500)
		--IF (CHARINDEX('DAILY',@RRule)>0)
		--BEGIN
		SET @RuleArray=(Select String_Agg (value,'|')  From string_split(@RRule,'='))
		SET @RuleArray=(Select String_Agg (value,'|')  From string_split(@RuleArray,';'))
		--Daily Rule
		INSERT INTO @RecurrenceRuleSeparator (Expression)
		Select (Select value From string_split(value,';')) From string_split(@RuleArray,'|')
		--END
		IF (CHARINDEX('WEEKLY',@RRule)>0)
		BEGIN
		--Weekly Rule
			INSERT INTO @RecurrenceRuleWeeklySeparator (Expression)
			Select value From string_split(@RRule,';')
		END

		DECLARE @RECCOUNT INT=0,@DAILY VARCHAR(50),@WEEKLY VARCHAR(50),@MONTHLY VARCHAR(50),@YEARLY VARCHAR(50), 
		@BYSETPOS VARCHAR(50),@BYSETPOSCOUNT VARCHAR(50),@INTERVAL VARCHAR(50),@INTERVALCOUNT VARCHAR(50)='1',
		@COUNT VARCHAR(50),@BYDAY VARCHAR(50),@BYDAYVALUE VARCHAR(50),@BYMONTHDAY VARCHAR(50),@BYMONTHDAYCOUNT VARCHAR(50),
		@BYMONTH VARCHAR(50),@BYMONTHCOUNT VARCHAR(50),@WEEKLYBYDAY VARCHAR(50),@UNTIL DateTime=NULL,@RecurrenceTblRowCount Int,@CounterVal Int=1,
		@BYDAYPOSITION INT=0,@BYMONTHDAYPOSITION Int=0,@RecurrencewkRowCount Int=0,@WEEKLYBYDAYPOS Int=0,@addDate DATETIME,@ReccurrenceCount Int=0,@endDate DATETIME,@DyDayGap Int=0,
		@statusValue Int=0,@IsUntilDateReached BIT=1,@WyWeekGap Int=0,@isweeklyselected BIT=1,@MyMonthGap Int=0,@monthDate Int=0,@currDate Int,@temp DATETIME,@YearVal Int=0,@MonthVal Int=0,
		@tempDate DateTime,@weekCount Int,@monthStart DateTime,@weekStartDate DateTime,@monthStartWeekday Int,@nthweekDay Int,@nthWeek Int,@setPosCount Int,@Expr VARCHAR(250),@IncreamentDate Int,
		@DateVal INT,@flag BIT=1,@Days Int,@YyYearGap Int=0,@monthIndex Int,@dayIndex INT,@bound Int,@specificDate DATETIME,@TDate VARCHAR(100),@AddDays Int


		SET @RecurrenceTblRowCount=(Select Count(*) From @RecurrenceRuleSeparator)
		--FindKeyIndex
		WHILE(@CounterVal<=@RecurrenceTblRowCount)
		BEGIN
			
			--COUNT
			IF((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)='COUNT')
			BEGIN
				SET @COUNT=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)
				SET @RECCOUNT=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=(@CounterVal+1))
			END

			--UNTIL
			IF((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)='UNTIL')
			BEGIN
				DECLARE @UntilVal Varchar(250)=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=(@CounterVal+1))
				SET @UntilVal=(SELECT SUBSTRING(@UntilVal,1,4))
				SET @UntilVal=@UntilVal+'-';
				SET @UntilVal=@UntilVal+(SELECT SUBSTRING((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=(@CounterVal+1)),5,2))
				SET @UntilVal=@UntilVal+'-';
				SET @UntilVal=@UntilVal+(SELECT SUBSTRING((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=(@CounterVal+1)),7,6))
				SET @UntilVal=@UntilVal+':';
				SET @UntilVal=@UntilVal+(SELECT SUBSTRING((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=(@CounterVal+1)),13,3))
				SET @UntilVal=@UntilVal+':';
				DECLARE @CharIndex INT=0
				SET @CharIndex=(Select CHARINDEX('T',@UntilVal))
				SET @UntilVal=SUBSTRING(@UntilVal,1,(@CharIndex-1))
				DECLARE @InputDateTime DATETIME = CONVERT(DATETIME,@UntilVal);
				SET @UNTIL=@InputDateTime;				
			END
		
			--DAILY
			IF((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)='DAILY')
			BEGIN
				SET @DAILY=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)			
			END

			--WEEKLY
			IF((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)='WEEKLY')
			BEGIN
				SET @WEEKLY=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)			
			END

			--INTERVAL
			IF((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)='INTERVAL')
			BEGIN
				SET @INTERVAL=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)	
				SET @INTERVALCOUNT=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=(@CounterVal+1))
			END

			--MONTHLY
			IF((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)='MONTHLY')
			BEGIN
				SET @MONTHLY=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)			
			END

			--YEARLY
			IF((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)='YEARLY')
			BEGIN
				SET @YEARLY=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)			
			END

			--BYSETPOS
			IF((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)='BYSETPOS')
			BEGIN
				SET @BYSETPOS=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)	
				SET @BYSETPOSCOUNT=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=(@CounterVal+1))
			END

			--BYDAY
			IF((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)='BYDAY')
			BEGIN
				SET @BYDAYPOSITION=@CounterVal
				SET @BYDAY=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)	
				SET @BYDAYVALUE=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=(@CounterVal+1))
			END

			--BYMONTHDAY
			IF((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)='BYMONTHDAY')
			BEGIN
				SET @BYMONTHDAYPOSITION=@CounterVal
				SET @BYMONTHDAY=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)	
				SET @BYMONTHDAYCOUNT=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=(@CounterVal+1))
			END

			--BYMONTH
			IF((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)='BYMONTH')
			BEGIN
				SET @BYMONTH=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)	
				SET @BYMONTHCOUNT=(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=(@CounterVal+1))
			END

			SET @CounterVal=@CounterVal+1;
		END

		SET @RecurrencewkRowCount=(Select Count(*) From @RecurrenceRuleWeeklySeparator)

		SET @CounterVal=1

		
		--FindWeeklyKeyIndex
		WHILE(@CounterVal<=@RecurrencewkRowCount)
		BEGIN
			IF((Select SUBSTRING(Expression,1,5) as Expression  From @RecurrenceRuleWeeklySeparator where RuleID=@CounterVal)='BYDAY')
			BEGIN
				SET @WEEKLYBYDAY=(Select Expression From @RecurrenceRuleWeeklySeparator where RuleID=@CounterVal)
				SET @WEEKLYBYDAYPOS=@CounterVal;
				BREAK;
			END
			SET @CounterVal=@CounterVal+1;
		END

		IF(@RecurrenceTblRowCount<>0 AND @RRule<>'')
		BEGIN
			SET @CounterVal=1; 
			SET @addDate=@StartDate
			SET @ReccurrenceCount=@RECCOUNT
		
			WHILE(@CounterVal<=@RecurrenceTblRowCount)
			BEGIN
					
					IF((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=@CounterVal)='UNTIL')
					BEGIN
					   
						SET @UntilVal =(Select Expression FROM @RecurrenceRuleSeparator Where RuleID=(@CounterVal+1))
						SET @UntilVal=(SELECT SUBSTRING(@UntilVal,1,4))
						SET @UntilVal=@UntilVal+'-';
						SET @UntilVal=@UntilVal+(SELECT SUBSTRING((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=(@CounterVal+1)),5,2))
						SET @UntilVal=@UntilVal+'-';
						SET @UntilVal=@UntilVal+(SELECT SUBSTRING((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=(@CounterVal+1)),7,6))
						SET @UntilVal=@UntilVal+':';
						SET @UntilVal=@UntilVal+(SELECT SUBSTRING((Select Expression FROM @RecurrenceRuleSeparator Where RuleID=(@CounterVal+1)),13,3))
						SET @UntilVal=@UntilVal+':';
						SET @CharIndex =0
						SET @CharIndex=(Select CHARINDEX('T',@UntilVal))
						SET @UntilVal=SUBSTRING(@UntilVal,1,(@CharIndex-1))	
						SET @InputDateTime = CONVERT(DATETIME,@UntilVal);			
						SET @endDate=@InputDateTime;
					END
					SET @CounterVal=@CounterVal+1;
			END
			--DAILY
			IF(@DAILY='DAILY')
			BEGIN
			
				IF((@RecurrenceTblRowCount>4 AND @INTERVAL='INTERVAL') OR @RecurrenceTblRowCount=4)
				BEGIN	
					
					IF(@RecurrenceTblRowCount=4 AND Convert(Int,@INTERVALCOUNT)=0)
					BEGIN
						SET @DyDayGap=1;
					END

					ELSE
					BEGIN
						SET @DyDayGap=CAST(@INTERVALCOUNT AS INT)
					END
					
					IF(@ReccurrenceCount=0 AND @UNTIL IS NULL)
					BEGIN
						SET @ReccurrenceCount=@OccurrenceCount;
					END
					
					IF(@ReccurrenceCount>0)
					BEGIN
						SET @CounterVal=1
						WHILE(@CounterVal<=@ReccurrenceCount)
						BEGIN
							INSERT INTO RecurrenceDateCollection(RecurrenceDate)
							Select @addDate
							SET @addDate=DATEADD(DD,@DyDayGap,@addDate)
							SET @CounterVal=@CounterVal+1;
						END
					END

					ELSE IF(@UNTIL IS NOT NULL)
					BEGIN
						SET @IsUntilDateReached=1
						WHILE(@IsUntilDateReached=1)
						BEGIN
						    
							IF(DATEDIFF(DD,@addDate,Convert(DATETIME,@UNTIL))>=0)
							BEGIN
								INSERT INTO RecurrenceDateCollection(RecurrenceDate)
								Select @addDate
								SET @addDate=DATEADD(DD,@DyDayGap,@addDate)
							END
							SET @statusValue=DATEDIFF(DD,@addDate,Convert(DATETIME,@UNTIL))
							IF(@statusValue<0)
							BEGIN
								SET @IsUntilDateReached=0;
							END
						END
					END
				END
			END
			--WEEKLY
			ELSE IF(@WEEKLY='WEEKLY')
			BEGIN		
				IF(@RecurrenceTblRowCount>4 AND @INTERVAL='INTERVAL')
				BEGIN
					SET @WyWeekGap=CONVERT(Int,@INTERVALCOUNT)
				END
				ELSE
				BEGIN
					SET @WyWeekGap=1;
				END

				IF(@WEEKLYBYDAYPOS=0)
				BEGIN 
					SET @WEEKLYBYDAYPOS=1
				END
				
				SET @Expr =(Select Expression FROM @RecurrenceRuleWeeklySeparator Where RuleID=@WEEKLYBYDAYPOS);
				IF(LEN(@Expr)>6)
				BEGIN
					SET @isweeklyselected=1;
				END
				

				IF(@ReccurrenceCount=0 AND @UNTIL IS NULL)
				BEGIN
					SET @ReccurrenceCount=@OccurrenceCount;
				END
				
				IF(@ReccurrenceCount>0)
				BEGIN 
					SET @isweeklyselected=1
					WHILE(((Select Count(*) FROM RecurrenceDateCollection)<@ReccurrenceCount) AND @isweeklyselected=1)
					BEGIN
						EXEC GetWeeklyDateCollection @addDate,@WEEKLYBYDAYPOS,@RecurrenceRuleWeeklySeparator
						IF((DATENAME(w,@addDate))='Saturday')
						BEGIN
							SET @IncreamentDate =(((@WyWeekGap-1)*7)+1)
							SET @addDate=DATEADD(DD,@IncreamentDate,@addDate)
						END
						ELSE
						BEGIN
							SET @addDate=DATEADD(DD,1,@addDate)
						END
					END	
				END

				ELSE IF (@UNTIL IS NOT NULL)
				BEGIN
					SET @IsUntilDateReached=1
					SET @isweeklyselected=1
					WHILE(@IsUntilDateReached=1 AND @isweeklyselected=1)
					BEGIN
						EXEC GetWeeklyDateCollection @addDate,@WEEKLYBYDAYPOS,@RecurrenceRuleWeeklySeparator
						IF((DATENAME(w,@addDate))='Saturday')
						BEGIN
							
							SET @IncreamentDate =(((@WyWeekGap-1)*7)+1)
							SET @addDate=DATEADD(DD,@IncreamentDate,@addDate)
						END
						ELSE
						BEGIN
							SET @addDate=DATEADD(DD,1,@addDate)
						END
						SET @statusValue=DATEDIFF(DD,@addDate,Convert(DATETIME,@UNTIL))
						IF(@statusValue<0)
						BEGIN
							SET @IsUntilDateReached=0;
						END
					END
				END
			END
			--MONTHLY
			ELSE IF(@MONTHLY='MONTHLY')
			BEGIN
			  
				IF((Select Count(*) FROM @RecurrenceRuleSeparator)>4 AND @INTERVAL='INTERVAL')
				BEGIN
					SET @MyMonthGap= (SELECT(CONVERT(Int,@INTERVALCOUNT)));
				END

				ELSE
				BEGIN
					SET @MyMonthGap=1;
				END
			IF(@BYMONTHDAY='BYMONTHDAY')
				BEGIN
					SET @monthDate=CAST(@BYMONTHDAYCOUNT as Int);
					IF(@monthDate<30)
					BEGIN
						SET @currDate=(Select DAY(@startDate));
						SET @YearVal=YEAR(@addDate);
						SET @MonthVal=Month(@addDate);
						SET @TDate =(CONVERT(VARCHAR,@YearVal)+'-'+CONVERT(VARCHAR,@MonthVal)+'-'+CONVERT(VARCHAR,@monthDate));
						SET @temp= Convert(DateTime,@TDate)
					
						IF(@monthDate<@currDate)
						BEGIN
							SET @addDate=DATEADD(MM,1,@temp);
						END

						ELSE 
						BEGIN
							SET @addDate=@temp;
						END

						IF(@ReccurrenceCount=0 AND @UNTIL IS NULL)
						BEGIN
							SET @ReccurrenceCount=@ReccurrenceCount;
						END

						IF(@ReccurrenceCount>0)
						BEGIN
							SET @CounterVal=1;
							WHILE(@CounterVal<=@ReccurrenceCount)
							BEGIN													
								IF OBJECT_ID('tempdb..#CalMonthDays') IS NOT NULL DROP TABLE #CalMonthDays
								CREATE TABLE #CalMonthDays
								(ID Int Primary key Identity(1,1),Result DateTime)
								Insert Into #CalMonthDays(Result)	
								EXEC GetByMonthDayDateCollection @addDate,@monthDate,@MyMonthGap								
								SET @addDate=(Select Result From #CalMonthDays)
								SET @CounterVal=@CounterVal+1;
							END				
						END


					ELSE IF(@UNTIL IS NOT NULL)
					BEGIN
						SET @IsUntilDateReached=1;
						WHILE(@IsUntilDateReached=1)
						BEGIN
							
							IF OBJECT_ID('tempdb..#MonthDays') IS NOT NULL DROP TABLE #MonthDays

							CREATE TABLE #MonthDays
							(ID Int Primary key Identity(1,1),Result DateTime)

							Insert Into #MonthDays(Result)	
							EXEC GetByMonthDayDateCollection @addDate,@monthDate,@MyMonthGap								
							SET @addDate=(Select Result From #MonthDays)

							IF(DATEDIFF(DD,@addDate,@UNTIL)<0)
							BEGIN
								SET @IsUntilDateReached=0;
							END

						END
					END
				
				--END
					ELSE
					BEGIN
						IF(@ReccurrenceCount=0 AND @UNTIL IS NULL)
						BEGIN
							SET @ReccurrenceCount=@OccurrenceCount;
						END

						IF(@ReccurrenceCount>0)
						BEGIN
							SET @CounterVal=1;
							WHILE(@CounterVal<=@ReccurrenceCount)
							BEGIN

								IF(DAY(@addDate)=DAY(@StartDate))
								BEGIN
									Insert Into RecurrenceDateCollection(RecurrenceDate)
									Select @addDate
									SET @CounterVal=@CounterVal+1;
								END

								ELSE
								BEGIN
									SET @CounterVal=@CounterVal-1;
								END

								SET @addDate=DATEADD(MM,@MyMonthGap,@addDate);
								SET @YearVal=YEAR(@addDate);
								SET @MonthVal=MONTH(@addDate);
								SET @DateVal  = 01;
								SET @tempDate=CONVERT(DATETIME,(CONVERT(VARCHAR,@YearVal)+'-'+CONVERT(VARCHAR,@MonthVal)+'-'+CONVERT(VARCHAR,@DateVal)));
								SET @addDate=CONVERT(DATETIME,(CONVERT(VARCHAR,@YearVal)+'-'+CONVERT(VARCHAR,@MonthVal)+'-'+CONVERT(VARCHAR,DAY(EOMONTH(@tempDate)))));				
							END
						END
						ELSE IF(@UNTIL IS NOT NULL)
						BEGIN
							SET @IsUntilDateReached=1;
							WHILE(@IsUntilDateReached=1)
							BEGIN

								IF(DAY(@addDate)=DAY(@StartDate))
								BEGIN
									Insert Into RecurrenceDateCollection(RecurrenceDate)
									Select @addDate
								END

								SET @addDate=DATEADD(MM,@MyMonthGap,@addDate);
								SET @YearVal=YEAR(@addDate);
								SET @MonthVal=MONTH(@addDate);
								SET @DateVal =01;
								SET @tempDate=CONVERT(DATETIME,(CONVERT(VARCHAR,@YearVal)+'-'+CONVERT(VARCHAR,@MonthVal)+'-'+CONVERT(VARCHAR,@DateVal)));
								SET @addDate=CONVERT(DATETIME,(CONVERT(VARCHAR,@YearVal)+'-'+CONVERT(VARCHAR,@MonthVal)+'-'+CONVERT(VARCHAR,DAY(EOMONTH(@tempDate)))));	
								--?
								IF(DATEDIFF(DD,@addDate,@UNTIL)>0)
								BEGIN
									SET @IsUntilDateReached=0;
								END

							END
						END
					END
				END
				ELSE IF(@BYDAY='BYDAY')
				BEGIN
				    
					IF(@ReccurrenceCount=0 AND @UNTIL IS NULL)
					BEGIN
						SET @ReccurrenceCount=@OccurrenceCount;
					END
					
					IF(@ReccurrenceCount>0)
					BEGIN
						WHILE((Select COUNT(*) FROM RecurrenceDateCollection)<@ReccurrenceCount)
						BEGIN
							
							SET @weekCount=(SELECT [dbo].WeeksInMonth(@addDate));
						
							SET @YearVal=YEAR(@addDate);
							SET @MonthVal=MONTH(@addDate);
							SET @DateVal =01;
							SET @TDate=CONVERT(VARCHAR,@YearVal)+'-'+CONVERT(VARCHAR,@MonthVal)+'-'+CONVERT(VARCHAR,@DateVal);
							SET @monthStart=CONVERT(DATETIME,@TDate);
										
							SET @AddDays=(Select DATEPART(dw,@monthStart));

							SET @weekStartDate=(SELECT DATEADD(DD,-(@AddDays),@monthStart));
							
							SET @monthStartWeekday=(SELECT DATEPART(dw,@monthStart));
							SET @nthweekDay=(Select [dbo].GetWeekDay(@BYDAYVALUE));
							SET @nthWeek=@nthWeek-1;
					
							SET @setPosCount=@BYDAYPOSITION;

							IF(@monthStartWeekday<=@nthweekDay)
							BEGIN
								IF(@setPosCount<1)
								BEGIN
									SET @BYSETPOS=@weekCount+@setPosCount;
								END

								ELSE
								BEGIN									
									SET @BYSETPOS=@setPosCount;
								END

								IF(@setPosCount<0)
								BEGIN
									SET @nthWeek=@BYSETPOS;
								END

								ELSE
								BEGIN								
									SET @nthWeek=@BYSETPOS-1;
								END

							END
							ELSE
							BEGIN
								IF(@setPosCount<0)
								BEGIN
									SET @BYSETPOS=@weekCount+@setPosCount;
								END

								ELSE
								BEGIN
									SET @BYSETPOS=@setPosCount;
								END

								SET @nthWeek=@BYSETPOS;
							END
														
							SET @addDate=(SELECT DATEADD(DD,(@nthWeek*7),@weekStartDate));
							SET @addDate=(Select DATEADD(DD,@nthweekDay,@addDate));
							
							IF((Select DATEDIFF(DD,@addDate,@StartDate))>0)
							BEGIN							
								SET @addDate=(Select DATEADD(MM,1,@addDate));
								CONTINUE;
							END
							
							IF(@weekCount=6 AND DAY(@addDate)=23)
							BEGIN
								SET @flag =1
								IF(Month(@addDate)=2)
								BEGIN
									SET @flag=0;
								END

								IF(@flag=1)
								BEGIN
									Insert Into RecurrenceDateCollection(RecurrenceDate)
									Select @addDate
								END
								SET @addDate=(Select DATEADD(DD,@MyMonthGap,@addDate));
							END

							ELSE IF(@weekCount=6 AND DAY(@addDate)=24)
							BEGIN
								SET @Days =DAY(EOMONTH(@addDate));
								SET @flag =1

								IF(DAY((DATEADD(DD,7,@addDate)))<>@Days)
								BEGIN
									SET @flag=0;
								END

								IF(@flag=1)
								BEGIN
									SET @addDate=(Select DATEADD(DD,7,@addDate))
									Insert Into RecurrenceDateCollection(RecurrenceDate)
									Select @addDate
								END

								SET @addDate=(Select DATEADD(MONTH,@MyMonthGap,@addDate))
							END
							
							ELSE IF((DAY(@addDate)>23) AND (Convert(Int,@BYDAYPOSITION))>0)
							BEGIN							   
								Insert Into RecurrenceDateCollection(RecurrenceDate)
								Select @addDate
								SET @addDate=DATEADD(MM,@MyMonthGap,@addDate)							
							END
						END
					END
					ELSE IF (@UNTIL IS NOT NULL)
					BEGIN
						Select 1 As 'First'
						WHILE(@addDate<=@endDate)
						BEGIN

							IF(@addDate>@endDate)
							BEGIN
								BREAK;
							END

							SET @YearVal=YEAR(@addDate);
							SET @MonthVal=MONTH(@addDate);
							SET @DateVal =01;
							SET @TDate=CONVERT(VARCHAR,@YearVal)+'-'+CONVERT(VARCHAR,@MonthVal)+'-'+CONVERT(VARCHAR,@DateVal);
							SET @monthStart=CONVERT(DATETIME,@TDate);
							
							SET @AddDays=(Select DATEPART(dw,@monthStart));

							SET @weekStartDate=(SELECT DATEADD(DD,-(@AddDays),@monthStart));
							
							SET @monthStartWeekday=(SELECT DATEPART(dw,@monthStart));
							SET @nthweekDay=(Select [dbo].GetWeekDay(@BYDAYVALUE));
							SET @nthWeek=@nthWeek-1;
					
				
							IF(@monthStartWeekday<=@nthweekDay)
							BEGIN
								SET @nthWeek=(CAST(@BYDAYPOSITION as INT)-1);
							END

							ELSE
							BEGIN
								SET @nthWeek=CAST(@BYDAYPOSITION as INT)
							END

							IF(CAST(@BYDAYPOSITION as INT)=-1)
							BEGIN
								SET @tempDate= DATEADD(MM,1,@monthStart);
								SET @tempDate= DATEADD(DD,-1,@tempDate);
								DECLARE @lastDate DATETIME=EOMONTH(@tempDate);
								SET @addDate=(Select [dbo].GetWeekFirstDate(@lastDate,@nthweekDay));
							END
					
							ELSE
							BEGIN
								SET @addDate=DATEADD(DD,(@nthWeek*7),@weekStartDate)
								SET @addDate=DATEADD(DD,@nthweekDay,@addDate);
								IF(@addDate>=@endDate)
								BEGIN
									BREAK;
								END
							END

							IF(DATEDIFF(DD,@addDate,@StartDate)<0)
							BEGIN
								Set @addDate=DATEADD(MONTH,1,@addDate);
								CONTINUE;
							END

							INSERT INTO RecurrenceDateCollection(RecurrenceDate)
							Select @addDate

							IF(Cast(@BYDAYPOSITION as Int)=-1)
							BEGIN
								SET @YearVal=YEAR(@addDate);
								SET @MonthVal=MONTH(@addDate);
								SET @DateVal =01;
								SET @addDate=CONVERT(DATETIME,(CONVERT(VARCHAR,@YearVal)+'-'+CONVERT(VARCHAR,@MonthVal)+'-'+CONVERT(VARCHAR,@DateVal)));
							END
							ELSE
							BEGIN
								SET @addDate=DATEADD(MM,@MyMonthGap,@addDate);
								SET @addDate=DATEADD(DD,-(DAY(@addDate)-1),@addDate)
							END
						END
					END
				END
			END
			--YEARLY
			ELSE IF(@YEARLY='YEARLY')
			BEGIN
				Set @YyYearGap =0
				IF((Select COUNT(*) FROM RecurrenceDateCollection)>4 AND @INTERVAL='INTERVAL')
				BEGIN
					SET @YyYearGap=CAST(@INTERVALCOUNT AS INT)
				END
				ELSE
					SET @YyYearGap=1;
				END
				IF(@BYMONTHDAY='BYMONTHDAY')
				BEGIN
					SET @monthIndex =CAST(@BYMONTHCOUNT AS INT);
					SET @dayIndex =CAST(@BYMONTHDAYCOUNT AS INT);
					IF(@monthIndex>0 AND @monthIndex<=12)
					BEGIN
						SET @YearVal=YEAR(@addDate);
						SET @MonthVal=MONTH(@addDate);
						SET @tempDate=CONVERT(DATETIME,(CONVERT(VARCHAR,@YearVal)+'-'+CONVERT(VARCHAR,@MonthVal)+'-'+CONVERT(VARCHAR,@monthDate)))
						SET @bound =DAY(EOMONTH(@tempDate))
						IF(@bound>=@dayIndex)
						BEGIN
							SET @YearVal=YEAR(@addDate);
							SET @MonthVal=MONTH(@addDate);
							SET @specificDate =CONVERT(DATETIME,(CONVERT(VARCHAR,@YearVal)+'-'+CONVERT(VARCHAR,@MonthVal)+'-'+CONVERT(VARCHAR,@dayIndex)))
							IF(DAY(@specificDate)<DAY(@addDate))
							BEGIN
								SET @addDate=@specificDate;
								SET @addDate=DATEADD(YEAR,1,@addDate);
							END
							ELSE
							BEGIN
								SET @addDate=@specificDate;
							END

							IF(@ReccurrenceCount=0 AND @UNTIL IS NULL)
							BEGIN
								SET @ReccurrenceCount=@OccurrenceCount;
							END

							IF(@ReccurrenceCount>0)
							BEGIN
								SET @CounterVal=1;
								WHILE(@CounterVal<=@ReccurrenceCount)
								BEGIN
									INSERT INTO RecurrenceDateCollection(RecurrenceDate)
									Select @addDate
									SET @addDate=DATEADD(YY,@YyYearGap,@addDate);
									SET @CounterVal=@CounterVal+1;
								END
							END

							ELSE IF(@UNTIL IS NOT NULL)
							BEGIN
								SET @IsUntilDateReached=1;
								WHILE(@IsUntilDateReached=1)
								BEGIN
									INSERT INTO RecurrenceDateCollection(RecurrenceDate)
									Select @addDate
									SET @addDate=DATEADD(YY,@YyYearGap,@addDate);
									IF(DATEDIFF(DD,@addDate,@UNTIL)>0)
									BEGIN
										SET @IsUntilDateReached=0;
									END
								END
							END
						END
					END
				END
				ELSE IF(@BYDAY='BYDAY')
				BEGIN
					SET @monthIndex =CAST(@BYMONTHCOUNT AS INT);
				
					IF(@ReccurrenceCount=0 AND @UNTIL IS NULL)
					BEGIN
						SET @ReccurrenceCount=@OccurrenceCount
					END

					IF(@ReccurrenceCount>0)
					BEGIN
						WHILE((Select COUNT(*) From RecurrenceDateCollection)<@ReccurrenceCount)
						BEGIN
					
							SET @weekCount=(SELECT [dbo].WeeksInMonth(@addDate));

							SET @YearVal=YEAR(@addDate);
							SET @MonthVal=MONTH(@addDate);
							SET @DateVal =01;
							SET @monthStart=CONVERT(DATETIME,(CONVERT(VARCHAR,@YearVal)+'-'+CONVERT(VARCHAR,@MonthVal)+'-'+CONVERT(VARCHAR,@DateVal)));

							SET @weekStartDate=DATEADD(DD,-(Select DATEPART(dw,@monthStart)),@monthDate);
							SET @monthStartWeekday=DATEPART(dw,@monthStart);
							SET @nthweekDay=(Select [dbo].GetWeekDay(@BYDAYVALUE)-1);
							SET @setPosCount=CAST(@BYSETPOSCOUNT as INT);

							IF(@monthStartWeekday<=@nthweekDay)
							BEGIN
								IF(@setPosCount<1)
								BEGIN
									SET @BYSETPOS=@weekCount+@setPosCount;
								END

								ELSE
								BEGIN
									SET @BYSETPOS=@setPosCount;
								END

								IF(@setPosCount<0)
								BEGIN
									SET @nthWeek=@BYSETPOS;
								END

								ELSE
								BEGIN
									SET @nthWeek=@BYSETPOS-1;
								END

							END
							ELSE
							BEGIN
								IF(@setPosCount<0)
								BEGIN
									SET @BYSETPOS=@weekCount+@setPosCount;
								END

								ELSE
								BEGIN
									SET @BYSETPOS=@setPosCount;
								END

								SET @nthWeek=@BYSETPOS;
							END

							IF(@setPosCount=-1)
							BEGIN
								SET @tempDate= DATEADD(MM,1,@monthStart);
								SET @tempDate= DATEADD(DD,-1,@tempDate);
								SET @lastDate =EOMONTH(@tempDate);
								SET @addDate=(Select [dbo].GetWeekFirstDate(@lastDate,@nthweekDay));
							END

							ELSE
							BEGIN
								SET @addDate=DATEADD(DD,(@nthWeek*7),@weekStartDate)
								SET @addDate=DATEADD(DD,@nthweekDay,@addDate);
							END

							IF(DATEDIFF(DD,@addDate,@StartDate)>0)
							BEGIN
								SET @addDate=DATEADD(YEAR,1,@addDate);
								CONTINUE;
							END

							IF(@weekCount=6 AND DAY(@addDate)=23)
							BEGIN
								SET @flag=1;
								IF(MONTH(@addDate)=2)
								BEGIN
									SET @flag=0;
								END
								IF(@flag=1)
								BEGIN
									SET @addDate=DATEADD(DD,7,@addDate);
									INSERT INTO RecurrenceDateCollection(RecurrenceDate)
									Select @addDate
								END

								SET @addDate=DATEADD(YY,@YyYearGap,@addDate);
							END

							ELSE IF(@weekCount=6 AND DAY(@addDate)=24)
							BEGIN
								SET @Days =DAY(EOMONTH(@addDate));
								SET @flag =1

								IF(DAY((DATEADD(DD,7,@addDate)))<>@Days)
								BEGIN
									SET @flag=0;
								END

								IF(@flag=1)
								BEGIN
									SET @addDate=DATEADD(DD,7,@addDate)
									Insert Into RecurrenceDateCollection(RecurrenceDate)
									Select @addDate
								END

								SET @addDate=DATEADD(YY,@YyYearGap,@addDate);
							END

							ELSE IF(DAY(@addDate)>23 AND CAST(@BYSETPOSCOUNT AS INT)=1)
							BEGIN
								Insert Into RecurrenceDateCollection(RecurrenceDate)
								Select @addDate
								SET @addDate=DATEADD(YY,@YyYearGap,@addDate)
							END
						END
					END
			
					ELSE IF(@Until IS NOT NULL)
					BEGIN
						SET @IsUntilDateReached=1;
						WHILE(@IsUntilDateReached=1)
						BEGIN
							SET @weekCount=(SELECT [dbo].WeeksInMonth(@addDate));

							SET @YearVal=YEAR(@addDate);
							SET @MonthVal=MONTH(@addDate);
							SET @DateVal =01;
							SET @monthStart=CONVERT(DATETIME,(CONVERT(VARCHAR,@YearVal)+'-'+CONVERT(VARCHAR,@MonthVal)+'-'+CONVERT(VARCHAR,@DateVal)));

							SET @weekStartDate=DATEADD(DD,-(Select DATEPART(dw,@monthStart)),@monthDate);
							SET @monthStartWeekday=DATEPART(dw,@monthStart);
							SET @nthweekDay=(Select [dbo].GetWeekDay(@BYDAYVALUE)-1);
							SET @setPosCount=CAST(@BYSETPOSCOUNT as INT);

							IF(@monthStartWeekday<=@nthweekDay)
							BEGIN
								IF(@setPosCount<1)
								BEGIN
									SET @BYSETPOS=@weekCount+@setPosCount;
								END

								ELSE
								BEGIN
									SET @BYSETPOS=@setPosCount;
								END

								IF(@setPosCount<0)
								BEGIN
									SET @nthWeek=@BYSETPOS;
								END

								ELSE
								BEGIN
									SET @nthWeek=@BYSETPOS-1;
								END
							END
							ELSE
							BEGIN
								IF(@setPosCount<0)
								BEGIN
									SET @BYSETPOS=@weekCount+@setPosCount;
								END

								ELSE
								BEGIN
									SET @BYSETPOS=@setPosCount;
								END

								SET @nthWeek=@BYSETPOS;
							END

							IF(@setPosCount=-1)
							BEGIN
								SET @tempDate= DATEADD(MM,1,@monthStart);
								SET @tempDate= DATEADD(DD,-1,@tempDate);
								SET @lastDate =EOMONTH(@tempDate);
								SET @addDate=(Select [dbo].GetWeekFirstDate(@lastDate,@nthweekDay));
							END

							ELSE
							BEGIN
								SET @addDate=DATEADD(DD,(@nthWeek*7),@weekStartDate)
								SET @addDate=DATEADD(DD,@nthweekDay,@addDate);
							END

							IF(DATEDIFF(DD,@addDate,@StartDate)>0)
							BEGIN
								SET @addDate=DATEADD(YEAR,1,@addDate);
								CONTINUE;
							END

							IF(DATEDIFF(DD,@addDate,@UNTIL)>=0)
							BEGIN
								IF(@weekCount=6 AND DAY(@addDate)=23)
								BEGIN
									SET @flag=1;
									IF(MONTH(@addDate)=2)
									BEGIN
										SET @flag=0;
									END
									IF(@flag=1)
									BEGIN
										SET @addDate=DATEADD(DD,7,@addDate);
										INSERT INTO RecurrenceDateCollection(RecurrenceDate)
										Select @addDate
									END
									SET @addDate=DATEADD(YY,@YyYearGap,@addDate);
								END

								ELSE IF(@weekCount=6 AND DAY(@addDate)=24)
								BEGIN
									SET @Days =DAY(EOMONTH(@addDate));
									SET @flag =1

									IF(DAY((DATEADD(DD,7,@addDate)))<>@Days)
									BEGIN
										SET @flag=0;
									END

									IF(@flag=1)
									BEGIN
										SET @addDate=DATEADD(DD,7,@addDate)
										Insert Into RecurrenceDateCollection(RecurrenceDate)
										Select @addDate
									END

									SET @addDate=DATEADD(YY,@YyYearGap,@addDate);
								END

								ELSE IF(DAY(@addDate)>=23 AND CAST(@BYSETPOSCOUNT AS INT)=-1)
								BEGIN
									Insert Into RecurrenceDateCollection(RecurrenceDate)
									Select @addDate
									SET @addDate=DATEADD(YY,@YyYearGap,@addDate)
								END
							END

							IF(DATEDIFF(DD,@addDate,@UNTIL)>0)
							BEGIN
								SET @IsUntilDateReached=1;
							END
						END
					END
				END
			END
		END
		--Final Result
		IF(@OccurrenceCount>0)
		BEGIN
			SELECT 
				RecurrenceID,Convert(Date,RecurrenceDate)RecurrenceDate 
			FROM 
				RecurrenceDateCollection  
			Where 
				RecurrenceID<=@OccurrenceCount
		END
		ELSE
		BEGIN
			SELECT 
				RecurrenceID,Convert(Date,RecurrenceDate)RecurrenceDate 
			FROM 
				RecurrenceDateCollection
		END
	END TRY
	BEGIN CATCH
		--Insert INTO [ARC_ENTERPRISE_CATCH_ERROR_LOG](Application_name,ErrorProcedure,ErrorNumber,ErrorSeverity,ErrorState,ErrorLine,ErrorMessage)
		Select 'GetOccurrenceDates',ERROR_PROCEDURE(),ERROR_NUMBER(),ERROR_SEVERITY(),ERROR_STATE(),ERROR_LINE(),ERROR_MESSAGE()
	END CATCH
END
